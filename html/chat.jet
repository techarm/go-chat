<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Whatsapp web chat template - Bootdey.com</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link href="https://netdna.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://unpkg.com/notie/dist/notie.min.css">
    <link rel="stylesheet" href="/static/css/chat.css">

    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://netdna.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
</head>

<body>

    <div class="container app">
        <div class="row app-one">
            <div class="col-sm-4 side">
                <div class="side-one">
                    <div class="row heading">
                        <div id="status" class="col"></div>
                    </div>
                    <div class="row sideBar" id="online-users"></div>
                </div>
            </div>

            <div class="col-sm-8 conversation">
                <div class="row heading">
                    <div class="col-sm-2 col-md-1 col-xs-3 heading-avatar">
                        <div class="heading-avatar-icon">
                            <img src="/static/image/home-48.png">
                        </div>
                    </div>
                    <div class="col-sm-8 col-xs-7 heading-name">
                        <a class="heading-name-meta">Free Chat Room</a>
                        <span class="heading-online">Online</span>
                    </div>
                    <div class="col-sm-1 col-xs-1 heading-dot pull-right">
                        <i class="fa fa-ellipsis-v fa-2x pull-right" aria-hidden="true"></i>
                    </div>
                </div>

                <div class="row message" id="conversation">
                    <div class="row message-previous">
                        <div class="col-sm-12 previous">
                            <!-- <a onclick="previous(this)" id="ankitjain28" name="20">
                                Show Previous Message!
                            </a> -->
                        </div>
                    </div>
                    <br>
                </div>

                <div class="row reply">
                    <div id="emojiBtn" class="col-sm-1 col-xs-1 reply-emojis">
                        <i class="fa fa-smile-o fa-2x"></i>
                    </div>
                    <div class="col-sm-10 col-xs-9 reply-main">
                        <textarea id="message" class="form-control" rows="1" id="comment"></textarea>
                    </div>
                    <div id="sendBtn" class="col-sm-1 col-xs-1 reply-send">
                        <i class="fa fa-send fa-2x" aria-hidden="true"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <input type="hidden" id="username" value="{{username}}">

    <script src="https://unpkg.com/notie"></script>
    <script src="/static/js/reconnecting-websocket.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@joeattardi/emoji-button@3.1.1/dist/index.min.js"></script>
    <script src="/static/js/chat.js"></script>
    <script>

        let socket = null;
        let o = document.getElementById("conversation");
        let usernameField = document.getElementById("username");
        let messageField = document.getElementById("message");

        window.onbeforeunload = function () {
            console.log("Leaving")
            let jsonData = {};
            jsonData["action"] = "left";
            socket.send(JSON.stringify(jsonData));
        }

        document.addEventListener("DOMContentLoaded", function () {
            socket = new ReconnectingWebSocket("ws://127.0.0.1:8080/ws", null, { debug: true, reconnectInterval: 3000 });

            const offline = `<span class="label label-danger">Disconnected</span>`
            const online = `<span class="label label-success">Connected</span>`
            let statusDiv = document.getElementById("status");

            socket.onopen = () => {
                console.log("successfully connected");

                let jsonData = {};
                jsonData["action"] = "username";
                jsonData["username"] = "{{username}}";
                socket.send(JSON.stringify(jsonData));

                statusDiv.innerHTML = online;
            }

            socket.onclose = () => {
                console.log("connection closed");
                statusDiv.innerHTML = offline;
            }

            socket.onerror = error => {
                console.log("there was an error", error);
                statusDiv.innerHTML = offline;
            }

            socket.onmessage = msg => {
                let data = JSON.parse(msg.data);
                console.log("Action is ", data.action);

                switch (data.action) {
                    case "list_users":
                        let usersContainer = document.getElementById("online-users");
                        usersContainer.innerHTML = '';

                        console.log(data.connected_users)

                        if (data.connected_users.length > 0) {
                            data.connected_users.forEach(user => {
                                let row = `
                                    <div class="row sideBar-body">
                                        <div class="col-sm-3 col-xs-3 sideBar-avatar">
                                            <div class="avatar-icon">
                                                <img src="/static/image//${user.avatar}">
                                            </div>
                                        </div>
                                        <div class="col-sm-9 col-xs-9 sideBar-main">
                                            <div class="row">
                                                <div class="col-sm-8 col-xs-8 sideBar-name">
                                                    <span class="name-meta">${user.username}</span><br>
                                                </div>
                                                <div class="col-sm-4 col-xs-4 pull-right sideBar-time">
                                                    <span class="time-meta pull-right">${user.active_time}</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                `;

                                usersContainer.innerHTML = usersContainer.innerHTML + row;
                            })
                        }
                        break;

                    case "broadcase":

                        let message = "";
                        if (data.message_type === "from") {
                            message = `
                                <div class="row message-body">
                                    <div class="col-sm-12 message-main-sender">
                                        <div class="row">
                                            <div class="col-sm-9 col-xs-9 sideBar-main">
                                                <div class="sender">
                                                    <div class="message-text">
                                                        ${data.message}
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-3 col-xs-3" style="text-align: center; padding: 0px;">
                                                <div class="avatar-icon">
                                                    <img src="/static/image//${data.user.avatar}">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            `;
                        } else {
                            message = `
                                <div class="row message-body">
                                <div class="col-sm-12 message-main-receiver">
                                    <div class="row">
                                        <div class="col-sm-3 col-xs-3" style="text-align: center; padding: 0px;">
                                            <div class="avatar-icon">
                                                <img src="/static/image//${data.user.avatar}">
                                            </div>
                                        </div>
                                        <div class="col-sm-9 col-xs-9 sideBar-main">
                                            <div class="receiver">
                                                <div class="message-text">
                                                    ${data.message}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            `;
                        }

                        o.innerHTML = o.innerHTML + message;
                        break;
                }
            }

            messageField.addEventListener("keypress", function (event) {
                if (event.code === "Enter") {
                    if (!socket) {
                        console.log("no connection");
                        return false;
                    }

                    if (usernameField.value === "" || messageField.value === "") {
                        alert("fill out user and message");
                        return false;
                    } else {
                        event.preventDefault();
                        event.stopPropagation();
                        sendMessage();
                    }
                }
            });

            document.getElementById("sendBtn").addEventListener("click", function () {
                if (usernameField.value === "" || messageField.value === "") {
                    alert("fill out user and message");
                    return false;
                } else {
                    sendMessage();
                }
            });


            const picker = new EmojiButton();
            const emojiBtn = document.getElementById('emojiBtn');

            picker.on('emoji', emoji => {
                messageField.value = messageField.value + emoji;
            });

            emojiBtn.addEventListener('click', () => picker.togglePicker(emojiBtn));
        });

        function sendMessage() {
            let jsonData = {};
            jsonData["action"] = "broadcase";
            jsonData["username"] = usernameField.value;
            jsonData["message"] = messageField.value;
            socket.send(JSON.stringify(jsonData));
            messageField.value = "";
        }

    </script>
</body>
</html>