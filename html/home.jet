<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

    <title>Hello, world!</title>

    <style>
        .chatbox {
            outline: 1px solid #ced4da;
            min-height: 160px;
            padding: 0.5em;
            border-radius: 0.25rem;
        }
    </style>
  </head>
  <body>
    <div class="container p-3">
        <div class="row">
            <div class="col">
                <h1>This is a home page.</h1>
                <hr>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <h3>Chat</h3>

                <div class="form-group">
                    <label for="username">Username:</label>
                    <input type="text" name="username" id="username" class="form-control" autocomplete="off">
                </div>

                <div class="form-group">
                    <label for="message">Message:</label>
                    <input type="text" name="message" id="message" class="form-control" autocomplete="off">
                </div>

                <hr>
                <a href="javascript:void(0);" class="btn btn-outline-primary" id="sendBtn">Send Message</a>

                <input type="hidden" name="action" id="action">

                <div id="status" class="mt-2 float-end"></div>
                <div class="mt-3 chatbox" id="output"></div>
            </div>

            <div class="col-md-4">
                <h3>Who's online</h3>
                <ul id="online-users"></ul>
            </div>
        </div>
    </div>

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <script src="/static/js/reconnecting-websocket.min.js"></script>
    <script>
        let socket = null;
        let o = document.getElementById("output");
        let usernameField = document.getElementById("username");
        let messageField = document.getElementById("message");

        window.onbeforeunload = function() {
            console.log("Leaving")
            let jsonData = {};
            jsonData["action"] = "left";
            socket.send(JSON.stringify(jsonData));
        }

        document.addEventListener("DOMContentLoaded", function() {
            socket = new ReconnectingWebSocket("ws://127.0.0.1:8080/ws", null, {debug: true, reconnectInterval: 3000});

            const offline = `<span class="badge bg-danger">Not Connected</span>`;
            const online = `<span class="badge bg-success">Connected</span>`;
            let statusDiv = document.getElementById("status");

            socket.onopen = () => {
                console.log("successfully connected");
                statusDiv.innerHTML = online;
            }

            socket.onclose = () => {
                console.log("connection closed");
                statusDiv.innerHTML = offline;
            }

            socket.onerror = error => {
                console.log("there was an error", error);
                statusDiv.innerHTML = offline;
            }

            socket.onmessage = msg => {
                let data = JSON.parse(msg.data);
                console.log("Action is ", data.action);

                switch(data.action) {
                    case "list_users":
                        let ul = document.getElementById("online-users");
                        while (ul.firstChild) ul.removeChild(ul.firstChild);

                        if (data.connected_users.length > 0) {
                            data.connected_users.forEach(element => {
                                let li = document.createElement("li");
                                li.appendChild(document.createTextNode(element));
                                ul.appendChild(li);
                            })
                        }
                        break;
                    
                    case "broadcase":
                        o.innerHTML = o.innerHTML + data.message + "<br>";
                        break;
                }
            }

            usernameField.addEventListener("change", function() {
                let jsonData = {};
                jsonData["action"] = "username";
                jsonData["username"] = this.value;
                socket.send(JSON.stringify(jsonData));
            });

            messageField.addEventListener("keydown", function(event) {
                if (event.code === "Enter") {
                    if (!socket) {
                        console.log("no connection");
                        return false;
                    }

                    if (usernameField.value === "" || messageField.value === "") {
                        alert("fill out user and message");
                        return false;
                    } else {
                        event.preventDefault();
                        event.stopPropagation();
                        sendMessage();
                    }
                }
            });

            document.getElementById("sendBtn").addEventListener("click", function() {
                if (usernameField.value === "" || messageField.value === "") {
                    alert("fill out user and message");
                    return false;
                } else {
                    sendMessage();
                }
            });
        });

        function sendMessage() {
            let jsonData = {};
            jsonData["action"] = "broadcase";
            jsonData["username"] = usernameField.value;
            jsonData["message"] = messageField.value;
            socket.send(JSON.stringify(jsonData));
            messageField.value = "";
        }

    </script>
</body>
</html>